openapi: 3.0.0
info:
  title: Unterlagen API
  description: Europace-API rund um hochgeladene Dokumente und freigegebene Unterlagen.
  version: 2.0.14
  termsOfService: https://developer.europace.de/terms/
paths:
  /dokumente:
    post:
      summary: Dokument hochladen
      description: |
        Ein Dokument samt Metadaten per Url hochladen (bis 100 MB) oder als Form-Data (bis 10 MB). Nach dem Hochladen muss das Dokument kategorisiert werden, damit es in der Unterlagenakte zu Verfügung steht und darüber letztlich an den Produktanbieter freigegeben werden kann. Hierzu muss der Endpunkt dokumente/{dokumentId}/kategorisierung aufgerufen werden.
        Die Form-Data-Variante ist DEPRECATED.
      operationId: uploadDokument
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DokumentUpload"
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  description: Inhalt des Dokuments.
                  type: string
                  format: binary
                anzeigename:
                  description: Name zur Anzeige auf der Oberfläche.
                  type: string
                vorgangsNummer:
                  description: Vorgangsnummer, dem das Dokument zugeordnet werden soll.
                  type: string
                mitKategorisierung:
                  description: Das Setzen dieses Feldes auf true bewirkt, das nach dem erfolgreichen Hochladen des Dokuments die Kategorisierung automatisch gestartet wird. Dadurch wird der zusätzliche Aufruf von "POST /dokumente/{dokumentId}/kategorisierung" überflüssig.
                  type: boolean
              required:
                - file
                - vorgangsNummer
      responses:
        "201":
          description: Dokument erfolgreich hochgeladen
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Dokument"
        "401":
          description: Authentifizierung fehlgeschlagen durch z.b. fehlender/ungültiger Authorization Header
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Authorisierung fehlgeschlagen durch z.b. fehlende Berechtigung auf den Vorgang oder falsche Vorgangsnummer
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        default:
          description: Unerwarteter Fehler
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security:
        - europace_oauth2_legacy:
            - API
        - europace_oauth2:
            - unterlagen:dokument:schreiben
      tags:
        - Dokumente
    get:
      summary: Metadaten zu allen Dokumenten eines Vorgangs laden
      operationId: getDokumente
      parameters:
        - name: vorgangsNummer
          in: query
          description: Vorgangsnummer für welche Dokumente geliefert werden sollen.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Eine Liste von Dokumenten
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Dokument"
        "401":
          description: Authentifizierung fehlgeschlagen durch z.b. fehlender/ungültiger Authorization Header
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        default:
          description: Unerwarteter Fehler
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security:
        - europace_oauth2_legacy:
            - API
        - europace_oauth2:
            - unterlagen:dokument:lesen
      tags:
        - Dokumente
    delete:
      summary: Alle Resourcen zu diesem Vorgang löschen
      description: |
        Dokumente und Seiten zu diesem Vorgang löschen.
      operationId: deleteVorgangsResourcen
      parameters:
        - name: vorgangsNummer
          in: query
          description: Vorgangsnummer zu der alle Resourcen gelöscht werden sollen.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Resourcen erfolgreich gelöscht.
        "401":
          description: Authentifizierung fehlgeschlagen durch z.b. fehlender/ungültiger Authorization Header
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Authorisierung fehlgeschlagen durch z.b. fehlende Berechtigung auf den Vorgang oder falsche Vorgangsnummer
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        default:
          description: Unerwarteter Fehler
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security:
        - europace_oauth2_legacy:
            - API
        - europace_oauth2:
            - unterlagen:dokument:schreiben
      tags:
        - Vorgang
  /dokumente/transferspeicher:
    post:
      summary: Transferspeicher für ein Dokument erstellen
      description: |
        Einen Transferspeicher für ein Dokument erstellen, aus dem das Dokument per signed URL (AWS Pre-Signed POST) hochgeladen werden kann. Beipiel siehe Readme.
      operationId: transferspeicher
      responses:
        "201":
          description: Transferspeicher erfolgreich erstellt
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Transferspeicher"
          links:
            UploadWithUrl:
              operationId: uploadDokument
              parameters:
                url: '$response.body#/downloadUrl'
              description: >
                Die `downloadUrl` kann als `url` in `POST /dokumente` verwendet werden. Vorher muss das Dokument an die Url unter `UploadData.url` mit `POST` übertragen werden.
        "401":
          description: Authentifizierung fehlgeschlagen durch z.b. fehlender/ungültiger Authorization Header
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        default:
          description: Unerwarteter Fehler
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security:
        - europace_oauth2_legacy:
            - API
        - europace_oauth2:
            - unterlagen:dokument:schreiben
      tags:
        - Dokumente
  "/dokumente/{dokumentId}":
    get:
      summary: Metadaten zu einem Dokument laden
      operationId: getDokument
      parameters:
        - name: dokumentId
          in: path
          description: Unique identifier des Dokuments.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Ein Dokument
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: "#/components/schemas/Dokument"
        "401":
          description: Authentifizierung fehlgeschlagen durch z.b. fehlender/ungültiger Authorization Header
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Authorisierung fehlgeschlagen durch z.b. fehlende Berechtigung auf den Vorgang
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Dokument nicht gefunden
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: "#/components/schemas/Error"
        default:
          description: Unerwarteter Fehler
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: "#/components/schemas/Error"
      security:
        - europace_oauth2_legacy:
            - API
        - europace_oauth2:
            - unterlagen:dokument:lesen
      tags:
        - Dokumente
    put:
      summary: Metadaten eines Dokuments aktualisieren
      operationId: updateDokument
      parameters:
        - in: path
          name: dokumentId
          description: Unique identifier des Dokuments.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AenderbareDokumentMetadaten"
      responses:
        "200":
          description: Metadaten des Dokuments erfolgreich aktualisiert
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Dokument"
        
        "401":
          description: Authentifizierung fehlgeschlagen durch z.b. fehlender/ungültiger Authorization Header
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Authorisierung fehlgeschlagen durch z.b. fehlende Berechtigung auf den Vorgang
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        default:
          description: Unerwarteter Fehler
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security:
        - europace_oauth2_legacy:
            - API
        - europace_oauth2:
            - unterlagen:dokument:schreiben
      tags:
        - Dokumente
    delete:
      summary: Metadaten und Inhalt eines Dokuments löschen
      operationId: deleteDokument
      parameters:
        - name: dokumentId
          in: path
          description: Unique identifier des Dokuments.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Dokument erfolgreich gelöscht
        "401":
          description: Authentifizierung fehlgeschlagen durch z.b. fehlender/ungültiger Authorization Header
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Authorisierung fehlgeschlagen durch z.b. fehlende Berechtigung auf den Vorgang
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        default:
          description: Unerwarteter Fehler
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security:
        - europace_oauth2_legacy:
            - API
        - europace_oauth2:
            - unterlagen:dokument:schreiben
      tags:
        - Dokumente
  "/dokumente/{dokumentId}/content":
    get:
      summary: Inhalt eines Dokuments laden
      operationId: downloadDokument
      parameters:
        - name: dokumentId
          in: path
          description: Unique identifier des Dokuments.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/pdf:
              schema:
                type: string
                format: binary
        "401":
          description: Authentifizierung fehlgeschlagen durch z.b. fehlender/ungültiger Authorization Header
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Authorisierung fehlgeschlagen durch z.b. fehlende Berechtigung auf den Vorgang
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Dokument nicht gefunden
          content:
            application/pdf:
              schema:
                $ref: "#/components/schemas/Error"
        default:
          description: Unerwarteter Fehler
          content:
            application/pdf:
              schema:
                $ref: "#/components/schemas/Error"
      security:
        - europace_oauth2_legacy:
            - API
        - europace_oauth2:
            - unterlagen:dokument:lesen
      tags:
        - Dokumente
  "/dokumente/{dokumentId}/preview":
    get:
      summary: Vorschaubild einer Seite eines Dokuments laden
      operationId: getPreview
      parameters:
        - name: dokumentId
          in: path
          description: Unique identifier des Dokuments.
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: anzuzeigende Seite, 1-basiert
          required: true
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          description: "Bildgröße: small oder large"
          schema:
            type: string
            enum:
              - small
              - large
            default: small
      responses:
        "200":
          description: Vorschaubild in JPEG
          content:
            image/jpeg:
              schema:
                type: string
                format: binary
            application/json:
              schema:
                type: string
                format: binary
        "400":
          description: Fehler in den Eingabedaten.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Authentifizierung fehlgeschlagen durch z.b. fehlender/ungültiger Authorization Header
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Authorisierung fehlgeschlagen durch z.b. fehlende Berechtigung auf den Vorgang
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Dokument nicht gefunden
          content:
            image/jpeg:
              schema:
                $ref: "#/components/schemas/Error"
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        default:
          description: Unerwarteter Fehler
          content:
            image/jpeg:
              schema:
                $ref: "#/components/schemas/Error"
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security:
        - europace_oauth2_legacy:
            - API
        - europace_oauth2:
            - unterlagen:dokument:lesen
      tags:
        - Dokumente
  "/dokumente/{dokumentId}/kategorisierung":
    post:
      deprecated: true
      summary: deprecated - bitte setzen sie beim Hochladen des Dokuments das Flag "mitKategorisierung" auf true --- Kategorisierung eines Dokuments anstoßen
      operationId: starteKategorisierung
      parameters:
        - name: dokumentId
          in: path
          description: Unique identifier des Dokuments.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Kategorisierung wurde gestartet
        "401":
          description: Authentifizierung fehlgeschlagen durch z.b. fehlender/ungültiger Authorization Header
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Authorisierung fehlgeschlagen durch z.b. fehlende Berechtigung auf den Vorgang
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Dokument nicht gefunden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        default:
          description: Unerwarteter Fehler
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security:
        - europace_oauth2_legacy:
            - API
        - europace_oauth2:
            - unterlagen:dokument:schreiben
      tags:
        - Dokumente
    get:
      summary: Kategorisierungsstatus eines Dokuments laden
      operationId: getKategorisierung
      parameters:
        - name: dokumentId
          in: path
          description: Unique identifier des Dokuments.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: >
            Die Kategorisierung eines Dokuments ist abgeschlossen, die Seiten
            können geladen werden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KategorisierungsStatus"
        "202":
          description: Die Kategorisierung ist noch nicht abgeschlossen.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KategorisierungsStatus"
        "401":
          description: Authentifizierung fehlgeschlagen durch z.b. fehlender/ungültiger Authorization Header
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Authorisierung fehlgeschlagen durch z.b. fehlende Berechtigung auf den Vorgang
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Dokument nicht gefunden oder Kategorisierung noch nicht gestartet.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        default:
          description: Unerwarteter Fehler
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security:
        - europace_oauth2_legacy:
            - API
        - europace_oauth2:
            - unterlagen:dokument:schreiben
      tags:
        - Dokumente
  "/dokumente/{dokumentId}/seiten":
    get:
      summary: Metadaten zu allen Seiten eines Dokuments laden
      operationId: getDokumentSeiten
      parameters:
        - name: dokumentId
          in: path
          description: Unique identifier des Dokuments.
          required: true
          schema:
            type: string
        - name: antragsNummer
          in: query
          description: z.T. beziehen sich die Angaben in der Seite auf Angaben im Vorgang
            zum Zeitpunkt, als der Antrag angenommen wurde.
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Liste der Seiten des Dokuments
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Seite"
        "401":
          description: Authentifizierung fehlgeschlagen durch z.b. fehlender/ungültiger Authorization Header
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Authorisierung fehlgeschlagen durch z.b. fehlende Berechtigung auf den Vorgang
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Dokument nicht gefunden.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        default:
          description: Unerwarteter Fehler
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security:
        - europace_oauth2_legacy:
            - API
        - europace_oauth2:
            - unterlagen:unterlage:lesen
      tags:
        - Seiten
  /dokumente/seiten:
    get:
      summary: Metadaten zu allen Seiten eines Vorgangs laden
      operationId: getSeiten
      parameters:
        - name: vorgangsNummer
          in: query
          description: Vorgangsnummer der Dokumente.
          required: true
          schema:
            type: string
        - name: antragsNummer
          in: query
          description: z.T. beziehen sich die Angaben in der Seite auf Angaben im Vorgang
            zum Zeitpunkt, als der Antrag angenommen wurde.
          required: false
          schema:
            type: string
        - name: finanzierungsvorschlagsId
          in: query
          description: Nur für Baufismart. Id eines Finanzierungsvorschlag aus dem zugehörigen Vorgang. Wenn vorhanden,
            werden die Unterlagenanforderungen des Finanzierungsvorschlags geliefert. Weiterhin kann der Bezug einer Seite geändert
            zurück geliefert werden, wenn die Unterlagenanforderungen die Seite in einem anderen Bezug erwarten.
            Die FinanzierungsvorschlagId kann beispielsweise aus der Vorgänge API https://github.com/europace/baufismart-vorgaenge-api ausgelesen werden
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Liste der Seiten
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Seiten"
        "401":
          description: Authentifizierung fehlgeschlagen durch z.b. fehlender/ungültiger Authorization Header
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Authorisierung fehlgeschlagen durch z.b. fehlende Berechtigung auf den Vorgang/Antrag
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Vorgang nicht gefunden.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        default:
          description: Unerwarteter Fehler
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security:
        - europace_oauth2_legacy:
            - API
        - europace_oauth2:
            - unterlagen:unterlage:lesen
      tags:
        - Seiten
    put:
      summary: Sortierung der Seiten Ändern
      description: Seiten werden werden in der angegeben Reihenfolge gespeichert. Es kann die Liste aller Seiten oder auch eine Teilliste davon übergeben werden. Bei einer Teilliste wird die Position in der Gesamtliste durch die erste Seite der Teilliste bestimmt.
      operationId: setzeReihenfolge
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/SeitenReferenz"
        description: Die Seiten-Referenzen der Seiten, die in dieser Reihenfolge gespeichert werden sollen.
        required: true
      responses:
        "200":
          description: Ok
        "400":
          description: Fehler in den Eingabedaten.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Authentifizierung fehlgeschlagen durch z.b. fehlender/ungültiger Authorization Header
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Authorisierung fehlgeschlagen durch z.b. fehlende Berechtigung auf den Vorgang
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        default:
          description: Unerwarteter Fehler
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security:
        - europace_oauth2_legacy:
            - API
        - europace_oauth2:
            - unterlagen:unterlage:schreiben
      tags:
        - Seiten
  "/dokumente/zuordnung/{kategorie}":
    put:
      summary: Zuordnung (Kategorie und Bezug) für mehrere Seiten setzen
      operationId: setzeZuordnung
      parameters:
        - name: kategorie
          in: path
          description: Die Kategorie, die den Seiten zugeordnet werden soll.
          required: true
          schema:
            type: string
        - name: bezug
          in: query
          description: Der Bezug, der den Seiten zugeordnet werden soll.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/SeitenReferenz"
        description: Die Seiten-Referenzen der Seiten, deren Kategorie und Bezug geändert
          werden sollen.
        required: true
      responses:
        "200":
          description: Ok
        "400":
          description: Fehler in den Eingabedaten.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Authentifizierung fehlgeschlagen durch z.b. fehlender/ungültiger Authorization Header
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Authorisierung fehlgeschlagen durch z.b. fehlende Berechtigung auf den Vorgang
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Kategorie/Bezug nicht gefunden.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        default:
          description: Unerwarteter Fehler
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security:
        - europace_oauth2_legacy:
            - API
        - europace_oauth2:
            - unterlagen:unterlage:schreiben
      tags:
        - Seiten
  /dokumente/zuordnungen:
    get:
      deprecated: true
      summary: deprecated - bitte /dokumente/moeglichezuordnungen verwenden --- Liste aller mögliche Zuordnungen (Kategorie und Bezug) von Seiten
        erhalten.
      description: Welche Zuordnungen stehen in diesem Vorgang/Antrag für Seiten zur
        Verfügung.
      operationId: getMoeglicheZuordnungenAlt
      parameters:
        - name: vorgangsNummer
          in: query
          description: Vorgangsnummer
          required: true
          schema:
            type: string
        - name: antragsNummer
          in: query
          description: Antragsnummer - spezifischere Zuordnungen - z.B. werden die
            Vorgangsdaten zum Zeitpunkt der Antrags-Annahme verwendet statt die
            aktuellen Vorgangsdaten.
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/MoeglicheZuordnungAlt"
        "400":
          description: Fehler in den Eingabedaten.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Vorgang nicht gefunden.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        default:
          description: Unerwarteter Fehler
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security:
        - europace_oauth2_legacy:
            - API
        - europace_oauth2:
            - unterlagen:unterlage:lesen
      tags:
        - Seiten
  /dokumente/moeglichezuordnungen:
    get:
      summary: Liste aller mögliche Zuordnungen (Kategorie und Bezug) von Seiten
        erhalten.
      description: Welche Zuordnungen stehen in diesem Vorgang/Antrag für Seiten zur
        Verfügung.
      operationId: getMoeglicheZuordnungen
      parameters:
        - name: vorgangsNummer
          in: query
          description: Vorgangsnummer
          required: true
          schema:
            type: string
        - name: antragsNummer
          in: query
          description: Antragsnummer - spezifischere Zuordnungen - z.B. werden die
            Vorgangsdaten zum Zeitpunkt der Antrags-Annahme verwendet statt die
            aktuellen Vorgangsdaten.
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/MoeglicheZuordnung"
        "400":
          description: Fehler in den Eingabedaten.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Authentifizierung fehlgeschlagen durch z.b. fehlender/ungültiger Authorization Header
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Authorisierung fehlgeschlagen durch z.b. fehlende Berechtigung auf den Vorgang
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Vorgang nicht gefunden.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        default:
          description: Unerwarteter Fehler
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security:
        - europace_oauth2_legacy:
            - API
        - europace_oauth2:
            - unterlagen:unterlage:lesen
      tags:
        - Seiten
  # dieser Endpunkt befindet sich aktuell in Entwicklung und sollte noch nicht für den Produktivbetrieb verwendet werden
  /dokumente/anforderungen:
    get:
      summary: Nur für Baufismart. Liste aller Unterlagenanforderungen zu einem Finanzierungsvorschlag erhalten.
      Die FinanzierungsvorschlagId kann beispielsweise aus der Vorgänge API https://github.com/europace/baufismart-vorgaenge-api ausgelesen werden
      operationId: getAnforderungen
      parameters:
        - name: vorgangsNummer
          in: query
          description: Nummer des Vorgangs, aus dem der Finanzierungsvorschlag stammt
          required: true
          schema:
            type: string
        - name: finanzierungsvorschlagsId
          in: query
          description: Id des Finanzierungsvorschlags, zu dem die Unterlagenanforderungen abgerufen werden sollen
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Unterlagenanforderung"
        "400":
          description: Fehler in den Eingabedaten.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Vorgang nicht gefunden.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        default:
          description: Unerwarteter Fehler
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security:
        - europace_oauth2_legacy:
            - API
        - europace_oauth2:
            - unterlagen:unterlage:lesen
      tags:
        - Seiten
  /dokumente/archiv:
    put:
      summary: Seiten ins Archiv verschieben oder aus dem Archiv herausholen
      description: Archiv-Flag wird gesetzt.
      operationId: setArchiv
      parameters:
        - name: archiviert
          in: query
          description: Seiten sollen ins Archiv verschoben (true) oder aus dem Archiv herausgeholt werden (false).
          required: false
          schema:
            type: boolean
            default: true
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/SeitenReferenz"
        description: Die Seiten-Referenzen der Seiten, die ins Archiv verschoben oder aus dem Archiv herausgeholt werden sollen.
        required: true
      responses:
        "200":
          description: Ok
        "400":
          description: Fehler in den Eingabedaten.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Authentifizierung fehlgeschlagen durch z.b. fehlender/ungültiger Authorization Header
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Authorisierung fehlgeschlagen durch z.b. fehlende Berechtigung auf den Vorgang
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        default:
          description: Unerwarteter Fehler
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security:
        - europace_oauth2_legacy:
            - API
        - europace_oauth2:
            - unterlagen:unterlage:schreiben
      tags:
        - Seiten
  /dokumente/geprueft:
    put:
      summary: Seiten als 'geprüft' markieren oder 'geprüft'-Markierung entfernen
      description: Seiten werden (mit aktuellem Zeitstempel) als 'geprüft' markiert. Bei
        bereits geprüften Seiten wird der Zeitstempel aktualisiert. Wird der Parameter geprueft auf false gesetzt, wird die Markierung entfernt und die Seiten erscheinen ungeprüft. Bei geprueft auf false und Seiten ohne 'geprüft'-Markierung ändert sich nichts.
      operationId: setGeprueft
      parameters:
        - name: geprueft
          in: query
          description: Seiten sollen als 'geprüft' markiert werden (true) bzw. die 'geprüft'-Markierung entfernt werden (false).
          required: false
          schema:
            type: boolean
            default: true
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/SeitenReferenz"
        description: Die Seiten-Referenzen der Seiten, die als 'geprüft' markiert bzw. deren 'geprüft'-Markierung entfernt werden sollen.
          sollen.
        required: true
      responses:
        "200":
          description: Ok
        "400":
          description: Fehler in den Eingabedaten.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Authentifizierung fehlgeschlagen durch z.b. fehlender/ungültiger Authorization Header
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Authorisierung fehlgeschlagen durch z.b. fehlende Berechtigung auf den Vorgang
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        default:
          description: Unerwarteter Fehler
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security:
        - europace_oauth2_legacy:
            - API
        - europace_oauth2:
            - unterlagen:unterlage:schreiben
      tags:
        - Seiten
  /dokumente/freigabe:
    post:
      summary: Seiten für einen ProduktAnbieter freigeben
      description: Es werden die Zuordnungen (Kategorie/Bezug) verwendet, die an den Seiten
        ermittelt oder manuell gesetzt wurden
      operationId: erzeugeFreigabe
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Freigabe"
        description: Freizugebende Seiten für einen Antrag und ProduktAnbieter.
        required: true
      responses:
        "201":
          description: Freigabe erstellt
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/FreigegebeneUnterlage"
        "400":
          description: Fehler in den Eingabedaten.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Authentifizierung fehlgeschlagen durch z.b. fehlender/ungültiger Authorization Header
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Authorisierung fehlgeschlagen durch z.b. fehlende Berechtigung auf den Vorgang oder falsche Vorgangsnummer
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        default:
          description: Unerwarteter Fehler
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security:
        - europace_oauth2_legacy:
            - API
        - europace_oauth2:
            - unterlagen:unterlage:freigeben
      tags:
        - Freigabe
    get:
      summary: Metadaten aller freigegebener Unterlagen (in einem Zeitraum) laden. Die Liste enthält sowohl erfolgreich als auch fehlgeschlagene Freigaben. Dazu bitte den Abrufstatus der freigegebenen Unterlage prüfen.
      operationId: getFreigaben
      parameters:
        - name: antragsNummer
          in: query
          description: Antragsnummer.
          required: true
          schema:
            type: string
        - name: von
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: bis
          in: query
          required: false
          schema:
            type: string
            format: date-time
      responses:
        "200":
          description: Eine Liste von freigegebenen Unterlagen.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/FreigegebeneUnterlage"
        "401":
          description: Authentifizierung fehlgeschlagen durch z.b. fehlender/ungültiger Authorization Header
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Authorisierung fehlgeschlagen durch z.b. fehlende Berechtigung auf den Antrag oder falsche Antragsnummer
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        default:
          description: Unerwarteter Fehler
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security:
        - europace_oauth2_legacy:
            - API
        - europace_oauth2:
            - unterlagen:freigabe:lesen
      tags:
        - Freigabe
  /dokumente/freigaben/content:
    get:
      summary: Den Inhalt aller erfolgreich freigegebenen Unterlagen als ZIP-Archiv
        herunterladen
      operationId: downloadFreigaben
      parameters:
        - name: antragsNummer
          in: query
          description: Antragsnummer
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Ein ZIP-Archiv mit allen für den Antrag erfolgreich freigegebenen
            Unterlagen als PDF-Dateien
          content:
            application/zip:
              schema:
                type: string
                format: binary
        "401":
          description: Authentifizierung fehlgeschlagen durch z.b. fehlender/ungültiger Authorization Header
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Authorisierung fehlgeschlagen durch z.b. fehlende Berechtigung auf den Antrag oder falsche Antragsnummer
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        default:
          description: Unerwarteter Fehler
          content:
            application/zip:
              schema:
                $ref: "#/components/schemas/Error"
      security:
        - europace_oauth2_legacy:
            - API
        - europace_oauth2:
            - unterlagen:freigabe:lesen
      tags:
        - Freigabe
  "/dokumente/freigabe/{id}":
    get:
      summary: Metadaten einer freigegebene Unterlage laden
      description: |
        Dieser Endpunkt liefert eine freigegebene Unterlage.
      operationId: getFreigabe
      parameters:
        - name: id
          in: path
          description: Id der freigegebenen Unterlage
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Eine freigegebene Unterlage.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FreigegebeneUnterlage"
        "404":
          description: Freigegebene Unterlage not found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Authentifizierung fehlgeschlagen durch z.b. fehlender/ungültiger Authorization Header
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Authorisierung fehlgeschlagen durch z.b. fehlende Berechtigung auf den Antrag
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        default:
          description: Unerwarteter Fehler
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security:
        - europace_oauth2_legacy:
            - API
        - europace_oauth2:
            - unterlagen:freigabe:lesen
      tags:
        - Freigabe
  "/dokumente/freigabe/{id}/content":
    get:
      summary: Inhalt einer freigegebene Unterlage laden
      operationId: downloadFreigabe
      parameters:
        - name: id
          in: path
          description: Unique identifier der freigegebenen Unterlage.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/pdf:
              schema:
                type: string
                format: binary
        "401":
          description: Authentifizierung fehlgeschlagen durch z.b. fehlender/ungültiger Authorization Header
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Authorisierung fehlgeschlagen durch z.b. fehlende Berechtigung auf den Antrag
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Dokument nicht gefunden
          content:
            application/pdf:
              schema:
                $ref: "#/components/schemas/Error"
        default:
          description: Unerwarteter Fehler
          content:
            application/pdf:
              schema:
                $ref: "#/components/schemas/Error"
      security:
        - europace_oauth2_legacy:
            - API
        - europace_oauth2:
            - unterlagen:freigabe:lesen
      tags:
        - Freigabe
  "/dokumente/freigabe/{id}/status":
    get:
      summary: Abrufstatus einer freigegebenen Unterlage laden
      operationId: getFreigegebeneUnterlageStatus
      parameters:
        - name: id
          in: path
          description: Id der freigegebenen Unterlage
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Status der freigegebenen Unterlage.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Abrufstatus"
        "401":
          description: Authentifizierung fehlgeschlagen durch z.b. fehlender/ungültiger Authorization Header
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Authorisierung fehlgeschlagen durch z.b. fehlende Berechtigung auf den Antrag
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Freigegebene Unterlage not found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        default:
          description: Unerwarteter Fehler
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security:
        - europace_oauth2_legacy:
            - API
        - europace_oauth2:
            - unterlagen:freigabe:lesen
      tags:
        - Freigabe
    post:
      summary: Abrufstatus einer freigegebenen Unterlage setzen
      operationId: setFreigegebeneUnterlageStatus
      parameters:
        - name: id
          in: path
          description: Id der freigegebenen Unterlage
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Abrufstatus"
        required: true
      responses:
        "201":
          description: Keine Rückgabe-Objekte.
        "401":
          description: Authentifizierung fehlgeschlagen durch z.b. fehlender/ungültiger Authorization Header
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Authorisierung fehlgeschlagen durch z.b. fehlende Berechtigung auf den Antrag
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Freigegebene Unterlage not found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        default:
          description: Unerwarteter Fehler
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security:
        - europace_oauth2_legacy:
            - API
        - europace_oauth2:
            - unterlagen:freigabe:schreiben
      tags:
        - Freigabe
  /dokumente/revision:
    get:
      summary: Revisionnummern der Daten zum angegebenen Vorgang
      description: >
        Liefert die aktuellen Revisionsnummern der Resourcen zum angegebenen
        Vorgang. Jede Änderung einer Resource ändert deren Revisionsnummer.
      operationId: getRevision
      parameters:
        - name: vorgangsNummer
          in: query
          description: Vorgangsnummer der Dokumente.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Revisionsnummern der verschiedenen Resourcen des Vorgangs
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Revision"
        "401":
          description: Authentifizierung fehlgeschlagen durch z.b. fehlender/ungültiger Authorization Header
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        default:
          description: Unerwarteter Fehler
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security:
        - europace_oauth2_legacy:
            - API
        - europace_oauth2: []
      tags:
        - Revision
servers:
  - url: https://api.europace.de/v1
components:
  securitySchemes:
    europace_oauth2_legacy:
      type: oauth2
      flows:
        password:
          tokenUrl: https://api.europace.de/login
          scopes:
            API: Authorisation Scope für die gesamte API.
    europace_oauth2:
      $ref: 'https://raw.githubusercontent.com/europace/authorization-api/master/europace_security.yaml'
  schemas:
    Dokument:
      description: >
        Ein Dokument ist eine hochgeladene Datei und kann aus einer oder
        mehreren - z.b. gescannten - Unterlagen bestehen.
      type: object
      properties:
        id:
          type: string
          description: Unique identifier des Dokuments.
        schluessel:
          type: string
          description: Öffentlicher Schlüssel der Dokumentenverwaltung.
        anzeigename:
          type: string
          description: Anzeigename, kann verändert werden.
        filename:
          type: string
          description: Name der original hochgeladenen Datei.
        erstellungsdatum:
          type: string
          format: date-time
          description: Gibt das Datum an, an dem Das Dokument hochgeladen wurde, sich also
            der Inhalt geändert hat.
        type:
          type: string
          description: Media-Type nach https://tools.ietf.org/html/rfc6838.
        size:
          type: integer
          format: int64
          description: Größe des Inhalts des Dokuments in Bytes.
        vorgangsNummer:
          type: string
          description: Vorgang dem das Dokument zugeordnet ist.
        verschluesselt:
          type: boolean
          description: Gibt an, ob das Dokument verschlüsselt ist
        kategorisierungsStatus:
          $ref: "#/components/schemas/KategorisierungsStatus"
        _links:
          type: object
          properties:
            self:
              $ref: "#/components/schemas/Relation"
            preview:
              $ref: "#/components/schemas/Relation"
            kategorisierung:
              $ref: "#/components/schemas/Relation"
            download:
              $ref: "#/components/schemas/Relation"
            publicDownload:
              $ref: "#/components/schemas/Relation"
            seiten:
              $ref: "#/components/schemas/Relation"
    DokumentUpload:
      type: object
      properties:
        anzeigename:
          description: Name zur Anzeige auf der Oberfläche.
          type: string
        vorgangsNummer:
          description: Vorgangsnummer, dem das Dokument zugeordnet werden soll.
          type: string
        mitKategorisierung:
          description: Das Setzen dieses Feldes auf true bewirkt, das nach dem erfolgreichen Hochladen des Dokuments die Kategorisierung automatisch gestartet. Dadurch wird der zusätzliche Aufruf von "POST /dokumente/{dokumentId}/kategorisierung" überflüssig.
          type: boolean
        url:
          description: Frei zugängliche URL zum Dokument. Kann z.B. mit 'POST /dokumente/transferspeicher' erstellt werden.
          type: string
      required:
        - url
        - vorgangsNummer
    Transferspeicher:
      type: object
      properties:
        uploadData:
          $ref: "#/components/schemas/UploadData"
        downloadUrl:
          description: URL zum Abrufen des Dokuments aus dem Transferspeicher.
          type: string
    UploadData:
      type: object
      properties:
        url:
          description: URL zum Hochladen des Dokuments in den Transferspeicher.
          type: string
        fields:
          description: AWS-Felder
          type: object
          additionalProperties:
            type: string
    AenderbareDokumentMetadaten:
      description: Metadaten die für ein Dokument geändert werden können.
      type: object
      properties:
        anzeigename:
          type: string
          description: Anzeigename
    KategorisierungsStatus:
      type: object
      description: >
        Wenn die Kategorisierung noch läuft, kann der Status der Kategorisierung
        erfragt werden.
      properties:
        status:
          type: string
          enum:
            - NEW
            - IN_PROGRESS
            - DONE
            - ERROR
        meldung:
          type: string
          description: Eine Meldung für den Nutzer, die den Grund für den Status beschreibt
            oder nähere Informationen liefert. Kann null sein.
    Seiten:
      type: object
      properties:
        seiten:
          type: array
          items:
            $ref: "#/components/schemas/Seite"
    Seite:
      type: object
      description: |
        Definiert eine Seite eines Dokuments.
      properties:
        dokumentId:
          type: string
          description: Id des referenzierten Dokuments.
        seite:
          type: integer
          format: int32
          description: Seite im Dokument, 1-basiert.
        drehung:
          type: integer
          format: int32
          enum:
            - 0
            - 90
            - 180
            - 270
          description: >
            Winkel in Grad, um den die Seite gegenüber dem Originaldokument
            gedreht werden muss, um richtig zu liegen. Ist 0, 90, 180 oder 270.

            Ist die Angabe null oder nicht vorhanden, dann ist dieser Winkel nicht bekannt, und die Seite wird nicht gedreht.
        klassifizierung:
          type: object
          properties:
            kategorien:
              description: |
                Kategorien der Seite nach Relevanz sortiert.
                Das erste Element beinhaltet die höchste Relevanz.
              type: array
              items:
                type: string
                example: Personalausweis
        zuordnung:
          $ref: "#/components/schemas/ZuordnungInSeite"
        anforderungen:
          type: array
          description: "Ids der erfüllten Unterlagenanforderungen."
          items:
            type: string
            example: pe.dsl.azv.finanzierungsloesung.rente.gesetzlich:antragsteller:1
        archiviert:
          type: boolean
          description: Archivierungsstatus der Seite.
        geprueftAm:
          type: string
          format: date-time
          description: Zeitpunkt, an dem die Seite inhaltlich geprüft wurde. null, wenn die
            Seite noch nicht inhaltlich geprüft wurde.
        freigaben:
          type: array
          description: Angaben zu Freigaben dieser Seite
          items:
            $ref: "#/components/schemas/SeitenFreigabe"
        _links:
          type: object
          properties:
            preview:
              $ref: "#/components/schemas/Relation"
    SeitenReferenz:
      type: object
      description: |
        Referenziert eine Seite eines Dokuments.
      properties:
        dokumentId:
          type: string
          description: Id des referenzierten Dokuments.
        seite:
          type: integer
          format: int32
          description: Seite im Dokument, 1-basiert.
    SeitenFreigabe:
      type: object
      description: |
        Angaben zur Freigabe dieser Seite
      properties:
        abrufStatus:
          $ref: "#/components/schemas/Abrufstatus"
        antragsNummer:
          type: string
          description: Antrag in dem diese Seite bereits freigegeben wurde
        datum:
          type: string
          format: date-time
          description: Gibt das Datum an, an dem das Dokument freigegeben wurde.
        zuordnung:
          $ref: "#/components/schemas/ZuordnungInSeite"
    Freigabe:
      type: object
      description: |
        Freizugebende Seiten für einen Antrag und ProduktAnbieter.
      properties:
        antragsNummer:
          type: string
          description: Antrag, für den die Freigabe erfolgen soll
        seiten:
          type: array
          items:
            $ref: "#/components/schemas/DokumentefreigabeSeiten"
        finanzierungsvorschlagsId:
          type: string
          description: optional - Kann bei Baufismart Vorgängen angegeben werden. Id des Finanzierungsvorschlags, für den die Freigabe erfolgen soll.
          Durch Angabe dieser ID kann sich bei der Freigabe der Bezug der Seiten ändern, wenn die Unterlagenanforderungen
          die Seiten in einem anderen Bezug erwarten.
          Die FinanzierungsvorschlagId kann beispielsweise aus der Vorgänge API https://github.com/europace/baufismart-vorgaenge-api ausgelesen werden.
          required: false
    #   wird benötigt, hat aber den gleichen Inhalt wie SeitenReferenz
    DokumentefreigabeSeiten:
      type: object
      description: |
        Seitennummer eines freizugebenden Dokuments.
      properties:
        dokumentId:
          type: string
          description: Id des referenzierten Dokuments.
        seite:
          type: integer
          format: int32
          description: Seite im Dokument, 1-basiert.
    FreigegebeneUnterlage:
      type: object
      description: >
        Mehrseitige vom Vertrieb fuer den Produktanbieter freigegebene
        Unterlage.

        Die Unterlage besitzt eine Kategorie und bezieht sich auf ein Bezugsobjekt.
      properties:
        id:
          type: string
          description: Unique identifier der freigegebenen Unterlage.
        antragsNummer:
          type: string
          description: Antragsnummer
        anzeigename:
          type: string
          description: Anzeigename.
        filename:
          type: string
          description: Name der Datei.
        size:
          type: integer
          description: Dateigroesse in bytes.
          format: int64
        schluessel:
          type: string
          description: Oeffentlicher Download Schluessel
        freigabedatum:
          type: string
          format: date-time
          description: Gibt das Datum an, an dem die Unterlage freigegeben wurde.
        mediaType:
          type: string
          description: Media-Type nach https://tools.ietf.org/html/rfc6838.
        kategorie:
          deprecated: true
          description: deprecated - bitte Knoten zuordnung verwenden --- Die Kategorie der Freigabe.
          type: string
        bezug:
          $ref: "#/components/schemas/BezugsobjektAlt"
        zuordnung:
          $ref: "#/components/schemas/ZuordnungInUnterlage"
        freigebender:
          $ref: "#/components/schemas/Partner"
        abrufstatus:
          $ref: "#/components/schemas/Abrufstatus"
        _links:
          type: object
          properties:
            self:
              $ref: "#/components/schemas/Relation"
            download:
              $ref: "#/components/schemas/Relation"
            publicDownload:
              $ref: "#/components/schemas/Relation"
            abrufstatus:
              $ref: "#/components/schemas/Relation"
    Abrufstatus:
      type: object
      description: Status, ob die vom Vertrieb freigegebene Unterlage beim Produktanbieter
        angekommen ist
      properties:
        status:
          type: string
          enum:
            - CREATED
            - IN_PROGRESS
            - FAILED
            - DELIVERED
        message:
          type: string
    Bezugsobjekt:
      type: object
      properties:
        id:
          type: string
          description: Id des Bezugsobjekts (innerhalb eines Antrags eindeutig).
          example: immobilie:4711
        typ:
          type: string
          description: Typ des Bezugsobjekts.
          example: immobilie
        name:
          type: string
          description: Name des Bezugsobjekts.
          example: Finanzierungsobjekt Feldweg 17
    Bezugskategorie:
      type: object
      properties:
        typ:
          type: string
          description: Typ des Bezuges (z.B. immobilie, antragsteller, vorhaben, verbindlichkeit) (technisch). (verbindlichkeit wird in einem zukünftigen Release umbenannt zu ratenkredit)
        id:
          type: string
          description: Id des Bezuges (z.B. immobilie:4711) (technisch)
        name:
          type: string
          description: Anzeigename für diesen Bezug (für Nutzer lesbar)
        rolle:
          type: object
          description: optionale Rolle dieses Bezuges - eine Rolle gruppiert Bezugsobjekte des gleichen Bezugtyps (z.B. bei Bezugstyp immobilie)
          properties:
            typ:
              type: string
              description: Typ dieser Rolle (z.B. finanzierungsobjekt, bestandsobjekt, zusatzsicherheit wenn bezugsTyp=immobilie) (technisch)
            name:
              type: string
              description: Anzeigename für diese Rolle (für Nutzer lesbar)
    BezugsobjektAlt:
      deprecated: true
      description: deprecated - bitte Knoten zuordnung statt bezug verwenden - zu beachten ist, dass der BezugsTyp im neuen Knoten immer klein geschrieben wird (angeglichen an den Standard in der API)
      type: object
      properties:
        id:
          type: string
          description: Id des Bezugsobjekts (innerhalb eines Antrags eindeutig).
          example: Immobilie:4711
        typ:
          type: string
          description: Typ des Bezugsobjekts.
          example: Immobilie
        name:
          type: string
          description: Name des Bezugsobjekts.
          example: Finanzierungsobjekt Feldweg 17
        bezeichnung:
          deprecated: true
          type: string
          description: Name des Bezugsobjekts.
          example: Finanzierungsobjekt Feldweg 17
    Partner:
      type: object
      properties:
        partnerId:
          type: string
          description: Id eines Partners auf der Europace-Plattform. Identifiziert eine
            Plakette im Partnermanagement.
          example: ABC45
    Relation:
      type: object
      properties:
        href:
          type: string
          format: uri
          description: A HAL Ref
        type:
          type: string
          description: Media-Type nach https://tools.ietf.org/html/rfc6838.
    Revision:
      type: object
      properties:
        dokumenteRevision:
          type: string
          description: Revisionsnummer der Dokumente des Vorgangs.
        seitenRevision:
          type: string
          description: Revisionsnummer der Dokumentseiten des Vorgangs.
    ZuordnungInSeite:
      type: object
      properties:
        kategorie:
          description: Beantwortet die Frage "Was ist es?"
          example: Krankenversicherungsnachweis
          type: string
        bezug:
          description: Beantwortet die Frage "Worauf bezieht es sich?"
          example: antragsteller:1
          type: string
        status:
          type: string
          enum:
            - KATEGORIE_FEHLT
            - KATEGORIE_UNGUELTIG
            - BEZUG_FEHLT
            - BEZUG_UNGUELTIG
            - VOLLSTAENDIG
    ZuordnungInUnterlage:
      type: object
      properties:
        kategorie:
          description: Beantwortet die Frage "Was ist es?"
          example: Krankenversicherungsnachweis
          type: string
        bezug:
          $ref: "#/components/schemas/Bezugsobjekt"
    MoeglicheZuordnungAlt:
      deprecated: true
      type: object
      properties:
        kategorie:
          type: string
          description: Technische Bezeichnung der Kategorie.
        label:
          type: string
          description: Für den Nutzer sichtbare Bezeichnung der Kategorie.
        beschreibung:
          type: string
          description: Eine nähere Beschreibung, was mit der Kategorie erfasst werden soll
            (optional).
        hinweistext:
          type: string
          description: Ein Hinweistext, der dem Nutzer für Unterlagen in dieser Kategorie
            angezeigt werden soll (optional, kann Markdown-Formatierung
            verwenden).
        bezuege:
          type: array
          items:
            type: object
            description: Mögliche Bezugsobjekte für diese Kategorie
            required:
              - op
              - path
            properties:
              bezug:
                type: string
                description: Id des Bezuges
              label:
                type: string
                description: Anzeigename für diesen Bezug
              oberkategorie:
                type: string
                description: Anzeigename der Gruppe, in die die Seiten gehören, für die
                  diese Zuordnung ausgewählt wurde. Wird ggf. mit
                  oberkategorieZusatz ergänzt.
                example: Zusatzsicherheit
              oberkategorieZusatz:
                type: string
                description: Zusätzliche Detailangaben zu der Gruppe, in die die Seiten
                  gehören, für die diese Zuordnung gewählt wurde. Optional.
                  oberkategorie und oberkategorieZusatz definieren *gemeinsam*
                  die Gruppe.
                example: Feldweg 17
    MoeglicheZuordnung:
      type: object
      properties:
        kategorie:
          type: object
          properties:
            id:
              type: string
              description: Id der Kategorie (technisch).
            name:
              type: string
              description: Bezeichnung der Kategorie (für Nutzer lesbar).
            beschreibung:
              type: string
              description: optional - detaillierte Beschreibung der Kategorie (für Nutzer lesbar).
        bezuege:
          type: array
          description: Mögliche Bezüge für diese Kategorie
          items:
            $ref: "#/components/schemas/Bezugskategorie"
    Unterlagenanforderung:
      type: object
      properties:
        id:
          type: string
          description: Id der Unterlagenanforderung (technisch).
        code:
          type: string
          description: produzentenspezifische Bezeichnung der Unterlagenanforderung.
        text:
          type: string
          description: von Produzenten gewählte Beschreibung der Unterlagenanforderung.
        kurzbezeichnung:
          type: string
          description: kurze Zusammenfassung der Unterlagenanforderung.
        erfuellungskategorien:
          type: array
          items:
            type: string
            description: Unterlagenkategorie, durch die die Unterlagenanforderung erfüllt wird.
        produktanbieter:
          $ref: "#/components/schemas/Produktanbieter"
        bezug:
          $ref: "#/components/schemas/Bezugskategorie"
    Produktanbieter:
      type: object
      description: Produktanbieter, der Finanzierungsvorschläge erstellt
      properties:
        id:
          type: string
          description: Id des Produktanbieters (z.B. DSL_BANK) (technisch)
        bezeichnung:
          type: string
          description: Bezeichnung des Produktanbieters (z.B. DSL Bank) (für Nutzer lesbar)
    Error:
      type: object
      properties:
        message:
          type: string
        statusCode:
          type: integer
          format: int32
        statusMessage:
          type: string
        timestamp:
          type: string
          format: date-time
        traceId:
          type: string
      title: Error
